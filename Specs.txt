Instructions:

Instruction: HLT
Name: Halt
Opcode: 0, 0x00
Operands: None
Description: Stops the virtual machine when issued
Flags Affected: None
Possible Exceptions Raised: None

Instruction: RDC
Name: Read Char
Opcode: 1, 0x01
Operands:
    Operand 1: Destination where data is read to
        Type: Register or memory
    Operand 2: Amount of data to read
        Type: Register, memory or immediate data
Description: Reads a certain amount of chars specified by the second operand to the destination address specified by the first operand
Flags Affected: None
Possible Exceptions Raised: SEG_FAULT if data being read flow out of the data segment

Instruction: RDB
Name: Read Byte
Opcode: 2, 0x02
Operands:
    Operand 1: Destination where data is read to
        Type: Register or memory
    Operand 2: Amount of data to read
        Type: Register, memory or immediate data
Description: Reads a certain amount of bytes specified by the second operand to the destination address specified by the first operand
Flags Affected: None
Possible Exceptions Raised: SEG_FAULT if data being read flow out of the data segment

Instruction: RDH
Name: Read Half-Word
Opcode: 3, 0x03
Operands:
    Operand 1: Destination where data is read to
        Type: Register or memory
    Operand 2: Amount of data to read
        Type: Register, memory or immediate data
Description: Reads a certain amount of half-words specified by the second operand to the destination address specified by the first operand
Flags Affected: None
Possible Exceptions Raised: SEG_FAULT if data being read flow out of the data segment

Instruction: RDW
Name: Read Word
Opcode: 4, 0x04
Operands:
    Operand 1: Destination where data is read to
        Type: Register or memory
    Operand 2: Amount of data to read
        Type: Register, memory or immediate data
Description: Reads a certain amount of words specified by the second operand to the destination address specified by the first operand
Flags Affected: None
Possible Exceptions Raised: SEG_FAULT if data being read flow out of the data segment

Instruction: WRC
Name: Write Char
Opcode: 5, 0x05
Operands:
    Operand 1: Destination where data is written from
        Type: Register, memory or immediate data
    Operand 2: Amount of data to write
        Type: Register, memory or immediate data
Description: Writes a certain amount of chars specified by the second operand from the destination address specified by the first operand
Flags Affected: None
Possible Exceptions Raised: SEG_FAULT if program tries to write from outside of the data segment

Instruction: WRB
Name: Write Byte
Opcode: 6, 0x06
Operands:
    Operand 1: Destination where data is written from
        Type: Register, memory or immediate data
    Operand 2: Amount of data to write
        Type: Register, memory or immediate data
Description: Writes a certain amount of bytes specified by the second operand from the destination address specified by the first operand
Flags Affected: None
Possible Exceptions Raised: SEG_FAULT if program tries to write from outside of the data segment

Instruction: WRH
Name: Write Half-Word
Opcode: 7, 0x07
Operands:
    Operand 1: Destination where data is written from
        Type: Register, memory or immediate data
    Operand 2: Amount of data to write
        Type: Register, memory or immediate data
Description: Writes a certain amount of half-words specified by the second operand from the destination address specified by the first operand
Flags Affected: None
Possible Exceptions Raised: SEG_FAULT if program tries to write from outside of the data segment

Instruction: WRW
Name: Write Word
Opcode: 8, 0x08
Operands:
    Operand 1: Destination where data is written from
        Type: Register, memory or immediate data
    Operand 2: Amount of data to write
        Type: Register, memory or immediate data
Description: Writes a certain amount of words specified by the second operand from the destination address specified by the first operand
Flags Affected: None
Possible Exceptions Raised: SEG_FAULT if program tries to write from outside of the data segment

Instruction: PUSH
Name: Push
Opcode: 9, 0x09
Operands:
    Operand 1: Value to be pushed onto the stack
        Type: Register, memory or immediate data
Description: Pushes the value specified by the first operand onto the stack
Flags Affected: None
Possible Exceptions Raised: STACK_FAULT if the stack is already full

Instruction: POP
Name: Pop
Opcode: 10, 0x0A
Operands:
    Operand 1: The destination where the top of the stack is popped to
        Type: Register, memory or immediate data
Description: Pops the top value off of the stack into the destination specified by the first operand
Possible Exceptions Raised: STACK_FAULT if the stack is empty

MOV: 11, 0x0B
Instruction: MOV
Name: Move
Opcode: 11, 0x0B
Operands:
    Operand 1: Destination of the move
        Type: Register or memory
    Operand 2: Source of the move
        Type: Register, memory or immediate data
Description: Moves the value specified by the first operand into the second operand
Possible Exceptions Raised: None

Instruction: ADD
Name: Add
Opcode: 12, 0x0C
Operands:
    Operand 1: Left-hand value of the addition operation
        Type: Register, memory or immediate value
    Operand 2: Right-hand value of the addition operation and where the value is stored
        Type: Register or memory
Description: Adds two value and stores them in the destination specified by the second operand
Possible Exceptions Raised: None

SUB: 13, 0x0D
MUL: 14, 0x0E
DIV: 15, 0x0F
UADD: 16, 0x10
USUB: 17, 0x11
UMUL: 18, 0x12
UDIV: 19, 0x13
URDW: 20, 0x14
UWRW: 21, 0x15
CMP: 22, 0x16
UCMP: 23, 0x17
JMP: 24, 0x18
JE: 25, 0x19
JNE: 26, 0x1A
JG: 27, 0x1B
JGE: 28, 0x1C
JL: 29, 0x1D
JLE: 30, 0x1E
JZ: 31, 0x1F
JNZ: 32, 0x20
JN: 33, 0x21
JNN: 34, 0x22
JO: 35, 0x23
JNO: 36, 0x24
JR: 37, 0x25
JNR: 38, 0x26
JP: 39, 0x27
JNP: 40, 0x28
INC: 41, 0x29
DEC: 42, 0x2A
AND: 43, 0x2B
OR: 44, 0x2C
XOR: 45, 0x2D
NOT: 46, 0x2E
NEG: 47, 0x2F
SHL: 48, 0x30
SHR: 49, 0x31
USHR: 50, 0x32
ROR: 51, 0x33
ROL: 52, 0x34
RCR: 53, 0x35
RCL: 54, 0x36

Instruction Operand Flags:
REG: 1
IMMEDIATE DATA: 2
ADDRESS: 4